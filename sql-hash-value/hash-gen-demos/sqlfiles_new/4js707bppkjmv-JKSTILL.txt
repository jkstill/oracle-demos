WITH PTDP AS (SELECT PT.ID, PT.QBLOCK_NAME, PT.OBJECT_ALIAS, DP.DISPLAY_ID DPID FROM TABLE(:B1 ) PT, TABLE(:B2 ) DP WHERE PT.ID = DP.OPER_ID(+) AND DP.SKIPPED(+) != 1), PLAN_DISP_TAB AS (SELECT GPT.QBLOCK_NAME, NVL(GPT.OBJECT_ALIAS, ' ') TALIAS, GPT.ID, GPT.DPID FROM (SELECT PTV.QBLOCK_NAME, PTV.OBJECT_ALIAS, MIN(PTV.ID) ID, MIN(PTV.DPID) DPID FROM (SELECT P1.* FROM PTDP P1 WHERE P1.DPID = (SELECT MIN(P2.DPID) FROM PTDP P2 WHERE P1.QBLOCK_NAME = P2.QBLOCK_NAME AND (P1.OBJECT_ALIAS = P2.OBJECT_ALIAS OR P1.OBJECT_ALIAS IS NULL AND P2.OBJECT_ALIAS IS NULL)) OR (P1.DPID IS NULL AND NVL((SELECT MIN(P2.DPID) FROM PTDP P2 WHERE P1.QBLOCK_NAME = P2.QBLOCK_NAME AND (P1.OBJECT_ALIAS = P2.OBJECT_ALIAS OR P1.OBJECT_ALIAS IS NULL AND P2.OBJECT_ALIAS IS NULL)), 0) = 0) ) PTV GROUP BY PTV.QBLOCK_NAME, PTV.OBJECT_ALIAS ) GPT ) SELECT FHINT.* FROM (SELECT HTABLE.QB, HTABLE.QST, HTABLE.O, HTABLE.HST, HTABLE.TEXT, HTABLE.REAS, DECODE(HTABLE.TALIAS, ' ', NULL, HTABLE.TALIAS) TALIAS, HTABLE.TST, (CASE WHEN PT.QBLOCK_NAME IS NULL AND EXISTS(SELECT 1 FROM PLAN_DISP_TAB PTQ WHERE PTQ.QBLOCK_NAME = HTABLE.QB) THEN (SELECT NVL(MIN(PTQ.DPID), NVL(MIN(PTQ.ID), 0)) FROM PLAN_DISP_TAB PTQ WHERE PTQ.QBLOCK_NAME = HTABLE.QB) WHEN PT.QBLOCK_NAME IS NULL THEN 0 WHEN PT.DPID IS NULL THEN PT.ID ELSE PT.DPID END) LID FROM (SELECT HT.QB, HT.QST, HT.O, HT.HST, HT.TEXT, HT.REAS, NVL(HT.TALIAS, ' ') TALIAS, HT.TST FROM (SELECT QB.QB, QB.QST, HNT.* FROM XMLTABLE('/hint_usage/q' PASSING XMLTYPE(:B3 ) COLUMNS QB VARCHAR2(4000) PATH './n', QST VARCHAR2(3) PATH '@st', HINTS XMLTYPE PATH './*') QB, XMLTABLE('//h' PASSING QB.HINTS COLUMNS O VARCHAR2(3) PATH '@o', HST VARCHAR2(3) PATH '@st', TEXT CLOB PATH 'x', REAS VARCHAR2(4000) PATH 'r', TALIAS VARCHAR2(4000) PATH './../f', TST VARCHAR2(3) PATH './../@st') HNT ) HT ) HTABLE, PLAN_DISP_TAB PT WHERE PT.QBLOCK_NAME(+) = HTABLE.QB AND PT.TALIAS(+) = HTABLE.TALIAS) FHINT ORDER BY FHINT.LID, FHINT.QST, FHINT.QB, FHINT.TST, FHINT.TALIAS NULLS FIRST, FHINT.HST, FHINT.O, DBMS_LOB.SUBSTR(FHINT.TEXT, 4000, 1), FHINT.REAS